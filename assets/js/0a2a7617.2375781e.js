"use strict";(self.webpackChunkmodern_cpp_algorithm_programming=self.webpackChunkmodern_cpp_algorithm_programming||[]).push([[786],{5680:(n,e,t)=>{t.d(e,{xA:()=>c,yg:()=>y});var a=t(6540);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,a)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach(function(e){r(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function p(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},o=Object.keys(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var u=a.createContext({}),l=function(n){var e=a.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},c=function(n){var e=l(n.components);return a.createElement(u.Provider,{value:e},n.children)},d="mdxType",g={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef(function(n,e){var t=n.components,r=n.mdxType,o=n.originalType,u=n.parentName,c=p(n,["components","mdxType","originalType","parentName"]),d=l(t),s=r,y=d["".concat(u,".").concat(s)]||d[s]||g[s]||o;return t?a.createElement(y,i(i({ref:e},c),{},{components:t})):a.createElement(y,i({ref:e},c))});function y(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=t.length,i=new Array(o);i[0]=s;var p={};for(var u in e)hasOwnProperty.call(e,u)&&(p[u]=e[u]);p.originalType=n,p[d]="string"==typeof n?n:r,i[1]=p;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},9912:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var a=t(8168),r=(t(6540),t(5680));const o={id:"auto",title:"auto",sidebar_position:2},i="auto (C++11\u8d77)",p={unversionedId:"\u57fa\u7840\u8bed\u6cd5/auto",id:"\u57fa\u7840\u8bed\u6cd5/auto",title:"auto",description:"\u4ecb\u7ecd",source:"@site/docs/\u57fa\u7840\u8bed\u6cd5/auto.md",sourceDirName:"\u57fa\u7840\u8bed\u6cd5",slug:"/\u57fa\u7840\u8bed\u6cd5/auto",permalink:"/docs/\u57fa\u7840\u8bed\u6cd5/auto",draft:!1,editUrl:"https://github.com/your-org/modern-cpp-algorithm-programming/edit/main/web/docs/\u57fa\u7840\u8bed\u6cd5/auto.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"auto",title:"auto",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\u521d\u59cb\u5316",permalink:"/docs/\u57fa\u7840\u8bed\u6cd5/initialization"}},u={},l=[{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd",level:2},{value:"\u53d8\u91cf\u58f0\u660e",id:"\u53d8\u91cf\u58f0\u660e",level:2},{value:"\u8fd4\u56de\u7c7b\u578b\u58f0\u660e (C++11\uff0cC++14)",id:"\u8fd4\u56de\u7c7b\u578b\u58f0\u660e-c11c14",level:2},{value:"\u51fd\u6570\u53c2\u6570\u58f0\u660e (C++20)",id:"\u51fd\u6570\u53c2\u6570\u58f0\u660e-c20",level:2},{value:"\u7c7b\u6a21\u677f\u5b9e\u53c2\u63a8\u5bfc CTAD (C++17)",id:"\u7c7b\u6a21\u677f\u5b9e\u53c2\u63a8\u5bfc-ctad-c17",level:2},{value:"\u5c3e\u7f6e\u7c7b\u578b\u58f0\u660e",id:"\u5c3e\u7f6e\u7c7b\u578b\u58f0\u660e",level:2}],c={toc:l},d="wrapper";function g({components:n,...e}){return(0,r.yg)(d,(0,a.A)({},c,e,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"auto-c11\u8d77"},"auto (C++11\u8d77)"),(0,r.yg)("h2",{id:"\u4ecb\u7ecd"},"\u4ecb\u7ecd"),(0,r.yg)("p",null,"auto \u662f\u73b0\u4ee3 C++ \u5386\u53f2\u7684\u5f00\u7aef\u4e4b\u4f5c\uff0c\u73b0\u4ee3 C++ \u4e00\u5b9a\u662f\u79bb\u4e0d\u5f00 auto \u7684\uff0c\u8fd9\u662f\u56e0\u4e3a\u4e00\u4e9b\u5386\u53f2\u5305\u88b1\u539f\u56e0\uff0cC++ \u7684\u7c7b\u578b\u7cfb\u7edf\u5f02\u5e38\u590d\u6742\uff0c\u800c\u5f15\u5165\u4e86 auto \u4e4b\u540e\uff0c\u4ee3\u7801\u5219\u53ef\u4ee5\u975e\u5e38\u7b80\u6d01\u3002"),(0,r.yg)("p",null,"C++98 \u65f6\u671f\uff0cC++ \u5fc5\u987b\u8fd9\u6837\u5199\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"using i64 = long long;\nstd::vector<int> a(100, 0);\nfor(std::vector<int>::iterator it = a.begin(); it != a.end(); ++it) {\n    // \u64cd\u4f5cit\n}\n")),(0,r.yg)("p",null,"\u800c\u4e14\u5f53\u4f60\u628a\u53d8\u91cf a \u7684\u7c7b\u578b\u6539\u4e3a ",(0,r.yg)("inlineCode",{parentName:"p"},"std::vector<i64>")," \u65f6\uff0c\u4f60\u9700\u8981\u628a\u4f60\u9879\u76ee\u5168\u90e8\u7684\u6709\u5173 a.begin() \u521d\u59cb\u5316\u7684\u8fed\u4ee3\u5668\u7c7b\u578b\u5168\u90e8\u624b\u52a8\u6539\u4e3a ",(0,r.yg)("inlineCode",{parentName:"p"},"std::vector<i64>::iterator"),"\uff0c\u663e\u7136\uff0c\u8fd9\u592a\u5510\u4e86\u3002"),(0,r.yg)("p",null,"\u800c C++11\uff0c\u5219\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"std::vector<int> a(100, 0);\nfor(auto it = a.begin(); it != a.end(); ++it) {\n    auto v = *it;\n    // \u64cd\u4f5cit\n}\n\nfor(auto v : a) {\n    // \u64cd\u4f5cv\n}\n")),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"\u5bf9\u4e8e ",(0,r.yg)("inlineCode",{parentName:"p"},"\u8303\u56f4for")," \u8fd8\u6ca1\u6709\u4ecb\u7ecd\uff0c\u5b9e\u9645\u4e0a\u5bf9\u4e8e\u65b9\u6cd5\u4e8c\u7684 ",(0,r.yg)("inlineCode",{parentName:"p"},"\u8303\u56f4for (C++11)")," \u800c\u8a00\uff0c\u5b83\u4e0e\u65b9\u6cd5\u4e00\u7684\u5199\u6cd5\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\uff0c\u6362\u8a00\u4e4b\uff0c\u62e5\u6709 ",(0,r.yg)("inlineCode",{parentName:"p"},".begin()")," \u4e0e ",(0,r.yg)("inlineCode",{parentName:"p"},".end()")," \u7684\u7c7b\uff08\u4e14\u5176\u8fed\u4ee3\u5668\u652f\u6301 ",(0,r.yg)("inlineCode",{parentName:"p"},"++")," \u548c ",(0,r.yg)("inlineCode",{parentName:"p"},"*")," \u4e24\u79cd\u8fd0\u7b97\uff09\u90fd\u53ef\u4ee5\u4f5c\u4e3a ",(0,r.yg)("inlineCode",{parentName:"p"},"\u8303\u56f4for")," \u7684\u5bf9\u8c61\uff0c\u672c\u8d28\u5219\u662f\u65b9\u6cd5\u4e00\u3002\u4e3b\u8981\u662f\u9700\u8981\u77e5\u9053\uff0c\u5f53\u4f60\u4fee\u6539 a \u7684\u7c7b\u578b\u4e4b\u540e\uff0c\u4f60\u4ee3\u7801\u91cc\u5176\u4ed6\u7684\u4ee3\u7801\uff0c\u5168\u90e8\u65e0\u9700\u6539\u52a8\uff0c\u8fd9\u662f auto \u7684\u610f\u4e49\u3002")),(0,r.yg)("h2",{id:"\u53d8\u91cf\u58f0\u660e"},"\u53d8\u91cf\u58f0\u660e"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"import std;\n\nint main()\n{\n    auto x = 0;                          // int\n    auto y = 0.;                         // double\n    auto z = 0LL;                        // i64\n    auto a = std::vector<int>(100, 0);   // std::vector<int>\n    auto s = std::string{};              // std::string\n    // auto s2 = std::string;            // \u5199\u6cd5\u9519\u8bef\uff0c\u56e0\u4e3a\u8fd9\u53ea\u5199\u4e86\u4e2a\u7c7b\u578b\uff0c\u800c\u6ca1\u6709\u58f0\u660e\u533f\u540d\u5bf9\u8c61\n}\n")),(0,r.yg)("p",null,"\u5f53\u4f60\u7f16\u5199\u4f7f\u7528 auto \u7684\u4ee3\u7801\u65f6\uff0c\u53ea\u662f\u7f16\u8bd1\u5668\u4f1a\u5e2e\u4f60\u628a\u4ee3\u7801\u6539\u6210\u4ee5\u4e0b\u4ee3\u7801\uff0c\u4ec5\u6b64\u800c\u5df2\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"import std;\n\nint main()\n{\n    int x = 0;                                   // int\n    double y = 0.;                               // double\n    i64 z = 0LL;                                 // i64\n    std::vector<int> a = std::vector<int>(100, 0); // std::vector<int>\n    std::string s = std::string{};               // std::string\n    // auto s2 = std::string;                    // \u5199\u6cd5\u9519\u8bef\uff0c\u56e0\u4e3a\u8fd9\u53ea\u5199\u4e86\u4e2a\u7c7b\u578b\uff0c\u800c\u6ca1\u6709\u58f0\u660e\u533f\u540d\u5bf9\u8c61\n}\n")),(0,r.yg)("p",null,"\u5bf9\u4e8e\u5982\u4e0b\u4ee3\u7801\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"auto a = std::vector<int>(100, 0);\n// \u7b49\u4ef7 std::vector<int> a = std::vector<int>(100, 0);\n")),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"\u5176\u5b9e\u8d28\u53ea\u662f\u4e00\u4e2a\u62f7\u8d1d\u521d\u59cb\u5316\u800c\u5df2\uff0c\u5229\u7528\u5230\u4e86",(0,r.yg)("a",{parentName:"p",href:"./initialization#%E5%8C%BF%E5%90%8D%E5%8F%98%E9%87%8F"},"\u533f\u540d\u5bf9\u8c61"),"\u3002")),(0,r.yg)("h2",{id:"\u8fd4\u56de\u7c7b\u578b\u58f0\u660e-c11c14"},"\u8fd4\u56de\u7c7b\u578b\u58f0\u660e (C++11\uff0cC++14)"),(0,r.yg)("p",null,"C++11\uff0c\u5bf9\u4e0b\u5217\u5c3e\u7f6e\u8fd4\u56de\u7c7b\u578b\u800c\u8a00\uff0cauto \u4ec5\u4ec5\u53ea\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\u7684\u4f5c\u7528\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"auto func() -> void\n{\n    return;\n}\n\nauto f2() -> int \n{\n    return 0;\n}\n")),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"\u540e\u9762\u7684 type \u662f\u5fc5\u987b\u5199\u51fa\u7684\u3002")),(0,r.yg)("p",null,"C++14\uff0c\u5219\u8fdb\u4e00\u6b65\u6539\u8fdb\uff0c\u5141\u8bb8\u8fd4\u56de\u7c7b\u578b\u662f auto \u7684\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"auto func() // \u63a8\u5bfc\u4e3a void\n{\n    return;\n}\n\nauto f2() // \u63a8\u5bfc\u4e3a int\n{\n    return 0;\n}\n")),(0,r.yg)("h2",{id:"\u51fd\u6570\u53c2\u6570\u58f0\u660e-c20"},"\u51fd\u6570\u53c2\u6570\u58f0\u660e (C++20)"),(0,r.yg)("p",null,"C++20 \u8d77\uff0c\u5141\u8bb8\u5bf9\u51fd\u6570\u53c2\u6570\u58f0\u660e auto\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"auto func(auto x)\n{\n    return x;\n}\n\n// template<typename T> // \u4e0a\u9762\u7684\u51fd\u6570\u672c\u8d28\u5219\u4e3a\u8be5\u6a21\u677f\n// T func(T x)\n// {\n//     return x;\n// }\n\nauto main() -> int \n{\n    func(1);    // \u8c03\u7528 int func(int)\n    func(2.2);  // \u8c03\u7528 double func(double)\n}\n")),(0,r.yg)("h2",{id:"\u7c7b\u6a21\u677f\u5b9e\u53c2\u63a8\u5bfc-ctad-c17"},"\u7c7b\u6a21\u677f\u5b9e\u53c2\u63a8\u5bfc CTAD (C++17)"),(0,r.yg)("p",null,"C++17 \u5f15\u5165\u4e86\u7c7b\u6a21\u677f\u5b9e\u53c2\u63a8\u5bfc\uff0c\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u7f16\u5199\u5982\u4e0b\u4ee3\u7801\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"auto main() -> int \n{\n    int n;\n    std::cin >> n;\n    auto a = std::vector(n, 0);                  // \u63a8\u5bfc\u4e3a std::vector<int>\n    auto matrix = std::vector(n, std::vector(n, 0));  // \u63a8\u5bfc\u4e3a std::vector<std::vector<int>>\n}\n")),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"STL \u5f88\u591a\u7c7b\u5728 C++17 \u90fd\u652f\u6301\u4e86 CTAD\uff0c\u53ef\u81ea\u884c\u5c1d\u8bd5\u3002")),(0,r.yg)("h2",{id:"\u5c3e\u7f6e\u7c7b\u578b\u58f0\u660e"},"\u5c3e\u7f6e\u7c7b\u578b\u58f0\u660e"),(0,r.yg)("p",null,"\u6709\u4eba\u5e38\u8bf4\uff0c\u5927\u91cf\u4f7f\u7528 auto\uff0c\u770b\u4e0d\u5230\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u964d\u4f4e\u53ef\u8bfb\u6027\uff0c\u5176\u5b9e\u4e0d\u7136\uff0c\u5f88\u591a\u65f6\u5019\u4f7f\u7528 auto \u53ea\u662f\u5c06\u7c7b\u578b\u540e\u7f6e\u4e86\u800c\u5df2\uff0c\u800c\u6709\u65f6\u5019\u90a3\u4e9b\u975e\u540e\u7f6e\u7c7b\u578b\u7684\u5199\u6cd5\u5c31\u8981\u505a\u51fa\u53d6\u820d\u4e86\uff0c\u663e\u5f0f\u5199\u51fa\u7c7b\u578b\u4f1a\u5bfc\u81f4\u6539\u4e00\u5904\uff0c\u5904\u5904\u6539\uff0c\u800c auto \u5219\u53ef\u4ee5\u7275\u4e00\u53d1\u800c\u52a8\u5168\u8eab\uff0c\u800c\u6709\u65f6 auto \u4e0d\u4e00\u5b9a\u4f1a\u964d\u4f4e\u53ef\u8bfb\u6027\u3002"),(0,r.yg)("p",null,"\u672c\u8282\u91cd\u5728\u8bf4\u4e00\u4e0b\u5c3e\u7f6e\u7c7b\u578b\u58f0\u660e\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// C++\nauto add(int x) -> int\n{\n    auto y = int{ x };\n    // ...\n}\n\nauto main() -> int \n{\n    auto a = std::vector(100, 0);  // \u540e\u7f6e std::vector<int>\n    auto y = int{};                // \u540e\u7f6e int, \u4ec5\u4e3e\u4f8b\uff0c\u5b9e\u9645\u4e0d\u8fd9\u4e48\u5199\n}\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"// Rust\nfn add(x: i32) -> i32 \n{\n    let y: i32 = x;\n    // ...\n}\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"# Python\ndef add(x: int) -> int:\n    y: int = x\n    pass\n")),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"\u5c3e\u7f6e\u7c7b\u578b\u58f0\u660e\u662f\u4efb\u4f55\u65b0\u751f\u8bed\u8a00\u90fd\u91c7\u53d6\u7684\u505a\u6cd5\uff0c\u5728\u4e00\u5b9a\u7a0b\u5e8f\u4e0a\u53ef\u4ee5\u5bf9\u9f50\u53d8\u91cf\u540d\u7684\u58f0\u660e\uff0c\u8ba9\u4ee3\u7801\u7684\u53d8\u91cf\u58f0\u660e\u66f4\u52a0\u6574\u9f50\uff0c\u4f46\u7531\u4e8e C++ \u4f5c\u4e3a\u975e\u65b0\u751f\u8bed\u8a00\u4e14\u6709\u517c\u5bb9\u5386\u53f2\u7684\u5305\u88b1\uff0cC++ \u662f\u6ca1\u6709\u5c3e\u7f6e\u8fd4\u56de\u7c7b\u578b\u7684\uff0cauto \u7684\u5f15\u5165\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u6709\u4e86\u5c3e\u7f6e\u8fd4\u56de\u7c7b\u578b\u7684\u96cf\u5f62\u3002")))}g.isMDXComponent=!0}}]);